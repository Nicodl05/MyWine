name: Code Quality

on:
  workflow_call:
    inputs:
      coverage-threshold:
        description: "Minimum coverage percentage required"
        required: false
        type: number
        default: 80
      coverage-percentage:
        description: "Coverage percentage produced by build-test workflow"
        required: false
        type: number

jobs:
  check-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install ReSharper Global Tools
        run: |
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          dotnet tool install --global JetBrains.ReSharper.GlobalTools --version 2025.2.0.1 || true
          export PATH="$HOME/.dotnet/tools:$PATH"

      - name: Run cleanupcode (ReSharper CLT)
        run: |
          set -euo pipefail
          export PATH="$HOME/.dotnet/tools:$PATH"
          if command -v cleanupcode >/dev/null 2>&1; then
            echo "Running cleanupcode on solution..."
            cleanupcode WineCellar.sln || true
          elif command -v jb >/dev/null 2>&1; then
            echo "Running jb cleanupcode on solution..."
            jb cleanupcode WineCellar.sln || true
          else
            echo "ReSharper CLT not found. Please install JetBrains.ReSharper.GlobalTools."
            exit 1
          fi
          if [ -n "$(git status --porcelain)" ]; then
            echo "Formatting changes detected by cleanupcode. Please run 'cleanupcode' locally and commit the changes."
            git --no-pager status --porcelain
            git --no-pager --no-color diff
            exit 1
          fi

      - name: Verify coverage threshold (from build-test)
        run: |
          set -euo pipefail
          THRESHOLD=${{ inputs.coverage-threshold }}
          COVERAGE_INPUT=${{ inputs.coverage-percentage }}
          if [ -z "${COVERAGE_INPUT}" ] || [ "${COVERAGE_INPUT}" = "null" ]; then
            echo "No coverage value provided to code-quality. Ensure build-test provides coverage output."
            exit 1
          fi
          echo "Current coverage (from build): ${COVERAGE_INPUT}%"
          if (( $(echo "${COVERAGE_INPUT} < ${THRESHOLD}" | bc -l) )); then
            echo "Coverage ${COVERAGE_INPUT}% is below threshold ${THRESHOLD}%"
            exit 1
          else
            echo "Coverage ${COVERAGE_INPUT}% meets threshold ${THRESHOLD}%"
          fi
