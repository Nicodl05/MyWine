name: Code Quality

on:
  workflow_call:
    inputs:
      coverage-threshold:
        description: "Minimum coverage percentage required"
        required: false
        type: number
        default: 80

jobs:
  check-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore and build
        run: |
          dotnet restore
          dotnet build --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \
            --logger trx \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq bc
          dotnet tool install --global dotnet-reportgenerator-globaltool || true
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Generate coverage summary
        run: |
          reportgenerator \
            -reports:"./TestResults/**/coverage.opencover.xml" \
            -targetdir:"./CoverageReport" \
            -reporttypes:JsonSummary \
            -verbosity:Info

      - name: Check coverage threshold
        id: coverage
        run: |
          if [ -f "./CoverageReport/Summary.json" ]; then
            COVERAGE=$(jq -r '.summary.linecoverage' ./CoverageReport/Summary.json)
            echo "Current coverage: ${COVERAGE}%"
            THRESHOLD=${{ inputs.coverage-threshold }}
            if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
              echo "Coverage ${COVERAGE}% is below threshold ${THRESHOLD}%"
              exit 1
            else
              echo "Coverage ${COVERAGE}% meets threshold ${THRESHOLD}%"
            fi
          else
            echo "No coverage summary found"
            exit 1
          fi
